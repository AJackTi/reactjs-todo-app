{"version":3,"sources":["logo.svg","components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/TodoApp.js","App.js","reportWebVitals.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChange","onClick","handleClick","React","Component","Todos","todosThis","map","Header","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","state","dispatch","payload","saveTheme","TodoApp","todos","setState","useEffect","axios","get","params","_limit","then","response","data","todoData","post","deleteTodo","delete","reponse","filter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f8f634a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nclass TodoItem extends React.Component {\n    render() {\n        const {completed, id, title} = this.props.todo;\n        return (\n            <li className=\"todo-item\">\n                <input type=\"checkbox\"\n                       checked={completed}\n                       onChange={() => this.props.handleChange(id)}\n                />\n                <span className={completed ? \"completed\" : null}> {title} </span>\n                <button \n                    className=\"btn-style\" \n                    onClick={() => this.props.handleClick(id)}> X</button>\n            </li>\n        );\n    }\n}\n\nexport default TodoItem;","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass Todos extends React.Component {\n    render() {\n        return (\n            // <div> Hello from Todos </div>\n            <div>\n                <ul>\n                    {this.props.todosThis.map(todo => (\n                        <TodoItem\n                            key={todo.id}\n                            todo={todo}\n                            handleChange={this.props.handleChange}\n                            handleClick={this.props.handleClick}/>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Todos;","import React from 'react'\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header className=\"header-container\">\n                <h1 className=\"header-title\">Simple Todo App</h1>\n            </header>\n        )\n    }\n}\n\nexport default Header;","// import React from \"react\";\n//\n// class AddTodo extends React.Component {\n//     onInputChange = e => {\n//         this.setState({\n//             title: e.target.value\n//         });\n//     };\n//\n//     state = {title: \"\"};\n//\n//     addTodo = e => {\n//         e.preventDefault();\n//         // console.log(this.state.title);\n//         this.props.addTodo(this.state.title);\n//         this.setState({title: \"\"});\n//     };\n//\n//     render() {\n//         return (\n//             <form className=\"form-container\" onSubmit={this.addTodo}>\n//                 <input type=\"text\"\n//                        placeholder=\"Add Todo...\"\n//                        className=\"input-text\"\n//                        value={this.state.title}\n//                        onChange={this.onInputChange}\n//                 />\n//                 <input type=\"submit\" value=\"Submit\"\n//                        className=\"input-submit\"/>\n//             </form>\n//         );\n//     }\n// }\n//\n// export default AddTodo;\n\nimport React, {useState} from \"react\";\n\nfunction AddTodo(props) {\n\n    const [title, setTitle] = useState(\"\");\n\n    const onInputChange = e => {\n        setTitle(e.target.value)\n    };\n\n    const addTodo = e => {\n        e.preventDefault();\n        props.addTodo(title);\n        setTitle(\"\");\n    };\n\n    return (\n        <form className=\"form-container\" onSubmit={addTodo}>\n            <input type=\"text\"\n                   placeholder=\"Add Todo...\"\n                   className=\"input-text\" value={title} onChange={onInputChange}\n            /> <input type=\"submit\"\n                      value=\"Submit\"\n                      className=\"input-submit\"/>\n        </form>\n    );\n}\n\nexport default AddTodo;","import React from 'react';\n\nconst RED = \"#ff0000\";\nconst BLUE = \"#0000ff\";\nconst GRAY = \"#678c89\";\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.submitThemeColor = this.submitThemeColor.bind(this);\n    }\n\n    submitThemeColor(color) {\n        debugger;\n        if (color) {\n            console.log('handleChangeTheme');\n            this.props.saveColorTheme(color);\n        }\n    }\n\n    componentWillReceiveProps(nextprops) {\n        debugger;\n        console.log('UNSAFE_componentWillReceiveProps: ' + JSON.stringify(nextprops\n        ))\n        document.documentElement.style.setProperty(\"--main-color\", nextprops.themeColor.color);\n    }\n\n    render() {\n        return (\n            <div className=\"footer\">\n                <div className=\"vertical-center\">\n                    <span>Choose Theme</span>\n                    <button onClick={() => this.submitThemeColor(RED)} className=\"dot red\"></button>\n                    <button onClick={() => this.submitThemeColor(BLUE)} className=\"dot blue\"></button>\n                    <button onClick={() => this.submitThemeColor(GRAY)} className=\"dot gray\"></button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import {connect} from 'react-redux';\nimport {saveTheme} from '../actions/changeThemeAction';\nimport Footer from '../../components/Footer'\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch,\n    saveColorTheme: color => dispatch(saveTheme(color))\n});\n\nfunction mapStateToProps(state) {\n    return {\n        themeColor: state.color\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Footer);","export const saveTheme = color => ({type: \"CHANGE_THEME\", payload: {color}});","// import React from \"react\";\n// import Header from \"./layout/Header\";\n// import Todos from \"./Todos\";\n// import AddTodo from \"./AddTodo\";\n// import {v4} from \"uuid\";\n// import axios from \"axios\";\n//\n// class TodoApp extends React.Component {\n//     // state = {\n//     //     todos: [{\n//     //         id: v4(), title: \"Setup development environment\", completed: true\n//     //     }, {\n//     //         id: v4(), title: \"Develop website and add content\", completed: false\n//     //     }, {\n//     //         id: v4(), title: \"Deploy to live server\", completed: false\n//     //     }\n//     //     ]\n//     // };\n//\n//     state = {todos: []};\n//\n//     handleCheckboxChange = id => {\n//         this.setState({\n//             todos: this.state.todos.map(todo => {\n//                 if (todo.id === id) {\n//                     todo.completed = !todo.completed;\n//                 }\n//                 return todo;\n//             })\n//         })\n//     };\n//\n//     handleClick = id => {\n//         // this.setState({\n//         //     todos: [...this.state.todos.filter(todo => {\n//         //         return todo.id !== id;\n//         //     })]\n//         // })\n//\n//         axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n//             .then(reponse => this.setState({\n//                 todos: [...this.state.todos.filter(todo => {\n//                     return todo.id !== id;\n//                 })\n//                 ]\n//             }))\n//     }\n//\n//     addTodo = title => {\n//         // console.log(title);\n//         // const newTodo = {id: v4(), title: title, completed: false};\n//         // this.setState({\n//         //     todos: [...this.state.todos, newTodo]\n//         // })\n//\n//         const todoData = {title: title, completed: false}\n//         axios.post(\"https://jsonplaceholder.typicode.com/todos\", todoData).then(response => {\n//             console.log(response.data)\n//             this.setState({todos: [...this.state.todos, response.data]})\n//         });\n//     };\n//\n//     render() {\n//         return (\n//             // <div><h1>Hello from Create React App</h1> <p>I am in a React Component!</p>\n//             // </div>\n//             <div className=\"container\">\n//                 <Header/>\n//                 <AddTodo addTodo={this.addTodo}/>\n//                 {/*<ul>*/}\n//                 {/*    {this.state.todos.map(todo => (*/}\n//                 {/*        <li key={todo.id}>{todo.title}</li>*/}\n//                 {/*    ))} */}\n//                 {/*</ul>*/}\n//                 <Todos todosThis={this.state.todos}\n//                        handleChange={this.handleCheckboxChange}\n//                        handleClick={this.handleClick}\n//                 />\n//             </div>\n//         );\n//     }\n//\n//     componentDidMount() {\n//         const config = {\n//             params: {_limit: 5}\n//         }\n//         axios.get(\"http://jsonplaceholder.typicode.com/todos\", config)\n//             .then(response => this.setState({todos: response.data}));\n//     }\n// }\n//\n// export default TodoApp;\n\nimport React, {useState, useEffect} from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"../components/layout/Header\";\nimport AddTodo from \"./AddTodo\"\n\n//khai báo thư viện axios\nimport axios from \"axios\";\n// import Footer from \"./Footer\";\nimport Footer from \"../store/containers/Footer\";\n\nfunction TodoApp() {\n\n    const [state, setState] = useState({\n        todos: []\n    });\n    const handleCheckboxChange = id => {\n        setState({\n            todos: state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            })\n        });\n    };\n    const deleteTodo = id => {\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n            .then(reponse => setState({\n                todos: [\n                    ...state.todos.filter(todo => {\n                        return todo.id !== id;\n                    })\n                ]\n            }))\n    };\n\n    const addTodo = title => {\n        const todoData = {\n            title: title,\n            completed: false\n        }\n        axios.post(\"https://jsonplaceholder.typicode.com/todos\", todoData)\n            .then(response => {\n                console.log(response.data)\n                setState({\n                    todos: [...state.todos, response.data]\n                })\n            });\n    };\n\n    useEffect(() => {\n        const config = {\n            params: {\n                _limit: 5\n            }\n\n        }\n        // tạo GET request để lấy danh sách todos\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\", config)\n            .then(response => setState({todos: response.data}));\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <Header/>\n            <AddTodo addTodo={addTodo}/>\n            <Todos todosThis={state.todos}\n                   handleChange={handleCheckboxChange}\n                   deleteTodo={deleteTodo}/>\n            <Footer/>\n        </div>\n    );\n\n}\n\nexport default TodoApp;","import logo from './logo.svg';\nimport './App.css';\nimport TodoApp from \"./components/TodoApp\";\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n      \n      <TodoApp/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {\n\n    color: \"#FFFFFF\"\n};\n\nexport default function themeReducer(state = initState, action) {\n    debugger;\n    switch (action.type) {\n        case 'CHANGE_THEME':\n            console.log('themeReducer: ' + JSON.stringify(state))\n            return Object.assign({}, state, {color: action.payload.color});\n        default:\n\n            return initState;\n\n    }\n\n}","import {combineReducers} from 'redux';\nimport color from './themeReducer';\n\nexport default combineReducers({color});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport TodoApp from \"./components/TodoApp\";\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <TodoApp/>\n    </Provider>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}